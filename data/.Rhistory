+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames ( data.remodeled ) [5] <- "avg"
colnames ( data.remodeled ) [6] <- "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- subset (data, avg >0 & HR > 0)
ata.remodeled <- data %>% group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames ( data.remodeled ) [5] <- "avg"
colnames ( data.remodeled ) [6] <- "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled <- data %>% group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames ( data.remodeled ) [5] <- "avg"
colnames ( data.remodeled ) [6] <- "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
# This is partly inspired by jazzurro's answer in
# http://stackoverflow.com/questions/27435453/how-to-normalise-subgroups-from-a-grouped-data-frame-in-r
data <- subset (data, avg >0 | HR > 0)
data.remodeled <- data %>% group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames ( data.remodeled ) [5] <- "avg"
colnames ( data.remodeled ) [6] <- "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg.pctrank = percent_rank (avg) * 100,
HR.pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg.pctrank - 50 ) ^ 2
+ (HR.pctrank - 50 ) ^ 2 ) ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 )
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg.pctrank = percent_rank (avg) * 100,
HR.pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg.pctrank - 50 ) ^ 2
+ (HR.pctrank - 50 ) ^ 2 ) ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 )
l
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
data <- subset (data, avg >0 & HR > 0)
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg.pctrank = percent_rank (avg) * 100,
HR.pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg.pctrank - 50 ) ^ 2
+ (HR.pctrank - 50 ) ^ 2 ) ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 )
colnames ( data.remodeled ) [5] <- "avg"
colnames ( data.remodeled ) [6] <- "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
data <- subset (data, avg >0 | HR > 0)
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg.pctrank = percent_rank (avg) * 100,
HR.pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg.pctrank - 50 ) ^ 2
+ (HR.pctrank - 50 ) ^ 2 ) ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 )
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg_pctrank = percent_rank (avg) * 100,
HR_pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
+ (HR_pctrank - 50 ) ^ 2 ) ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 )
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
# This is partly inspired by jazzurro's answer in
# http://stackoverflow.com/questions/27435453/how-to-normalise-subgroups-from-a-grouped-data-frame-in-r
# data <- subset (data, avg >0 | HR > 0)
# data.remodeled <- data %>% group_by ( handedness ) %>%
#   summarise_each ( funs ( mean ), avg, HR) %>%
#   left_join(data, ., by= "handedness" ) %>%
#   mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
#                             + (HR.x - HR.y ) ^ 2 ) ) %>%
#   group_by( handedness ) %>%
#   mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
#   select ( -c ( avg.y, HR.y ) )
data.remodeled <- data %>% group_by ( handedness ) %>%
mutate ( avg_pctrank = percent_rank (avg) * 100,
HR_pctrank = percent_rank (HR) * 100 ) %>%
mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
+ (HR_pctrank - 50 ) ^ 2 ) ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 )
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
?scale
??scale
??scale
?mutate
library (scales)
data.remodeled <- data %>%
mutate (avg_scaled = reshape_max (avg, t=c(0,100)),
HR_scaled = reshape_max (HR, c(0,100))) %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.remodeled <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100))) %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.remodeled <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100))) %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data, ., by= "handedness" )
data.remodeled
head(data.remodeled)
data.rescaleded <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100)))
data.rescaled
data.rescaled <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100)))
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.rescaled <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100)))
data.rescaled
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.remodeled
head(data.remodeled)
data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled)
data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" )
head(data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ))
data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) )
head(data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ))
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
head(data.remodeled)
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 )
head(data.remodeled)
data.rescaled <- data %>%
mutate (avg_scaled = rescale_max (avg, t=c(0,100)),
HR_scaled = rescale_max (HR, c(0,100)))
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
head(data.remodeled)
data_remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness )
head(data_remodeled)
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
head(data.remodeled)
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
head(data.remodeled)
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.rescaled <- data %>%
mutate (avg_scaled = rescale (avg, t=c(0,100)),
HR_scaled = rescale (HR, c(0,100)))
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( median ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data %>%
group_by ( handedness ) %>%
summarise_each ( funs ( median ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames(data.remodeled)
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( median ), avg_scaled, HR_scaled) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( median ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- subset (data, avg >0 | HR > 0)
data.rescaled <- data %>%
mutate (avg_scaled = rescale (avg, t=c(0,100)),
HR_scaled = rescale (HR, c(0,100)))
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( median ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
#colnames(data.remodeled)[7] = "avg_scaled"
#colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- subset (data, avg >0 & HR > 0)
data.remodeled<- data %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg, HR) %>%
left_join(data, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg.x - avg.y) ^ 2
+ (HR.x - HR.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg.y, HR.y ) )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
#colnames(data.remodeled)[7] = "avg_scaled"
#colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
# This is partly inspired by jazzurro's answer in
# http://stackoverflow.com/questions/27435453/how-to-normalise-subgroups-from-a-grouped-data-frame-in-r
data <- subset (data, avg >0 & HR > 0)
data.rescaled <- data %>%
mutate (avg_scaled = rescale (avg, t=c(0,100)),
HR_scaled = rescale (HR, c(0,100)))
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data_scaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data_rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
data <- read.csv (file="baseball_data.csv")
data.rescaled <- data %>%
mutate (avg_scaled = rescale (avg, t=c(0,100)),
HR_scaled = rescale (HR, c(0,100)))
data.remodeled<- data.rescaled %>%
group_by ( handedness ) %>%
summarise_each ( funs ( mean ), avg_scaled, HR_scaled) %>%
left_join(data.rescaled, ., by= "handedness" ) %>%
mutate (distance = sqrt(  (avg_scaled.x - avg_scaled.y) ^ 2
+ (HR_scaled.x - HR_scaled.y ) ^ 2 ) ) %>%
group_by ( handedness ) %>%
mutate ( distance_pctrank = percent_rank( distance ) * 100 ) %>%
select ( -c ( avg_scaled.y, HR_scaled.y ) )
# data.remodeled <- data %>%
#   group_by ( handedness ) %>%
#   mutate ( avg_pctrank = percent_rank (avg) * 100,
#            HR_pctrank = percent_rank (HR) * 100 ) %>%
#   mutate ( distance = sqrt(  (avg_pctrank - 50 ) ^ 2
#                             + (HR_pctrank - 50 ) ^ 2 ) ) %>%
#   mutate ( distance_pctrank = percent_rank( distance ) * 100 )
colnames(data.remodeled)[5] = "avg"
colnames(data.remodeled)[6] = "HR"
colnames(data.remodeled)[7] = "avg_scaled"
colnames(data.remodeled)[8] = "HR_scaled"
write.csv( data.remodeled, file = "baseball_data_remodeled.csv", row.names=F)
?distance
??distance
??Eucalidean
??Euclidean
??euclidean
??distance
q()
